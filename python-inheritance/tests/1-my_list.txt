The ``MyList`` module
======================

Using ``MyList``
-------------------

First import ``MyList`` from the ``1-my_list`` file:

    >>> MyList = __import__('1-my_list').MyList

Check instantiation:

    >>> my_list = MyList()
    >>> isinstance(my_list, MyList)
    True

Check inheritance from built-in ``list``:

    >>> issubclass(MyList, list)
    True

Check ``__str__`` representation (inherits from list):

    >>> my_list.append(3)
    >>> my_list.append(1)
    >>> my_list.append(2)
    >>> print(my_list)
    [3, 1, 2]

Check ``append()`` method (inherited from list):

    >>> my_list.append(4)
    >>> print(my_list)
    [3, 1, 2, 4]

Check ``print_sorted()`` prints sorted list but does not modify original:

    >>> my_list.print_sorted()
    [1, 2, 3, 4]
    >>> print(my_list)
    [3, 1, 2, 4]

Check with already sorted list:

    >>> sorted_list = MyList()
    >>> sorted_list.append(1)
    >>> sorted_list.append(2)
    >>> sorted_list.append(3)
    >>> sorted_list.print_sorted()
    [1, 2, 3]
    >>> print(sorted_list)
    [1, 2, 3]

Check with negative numbers:

    >>> neg_list = MyList()
    >>> neg_list.extend([5, -2, 0])
    >>> neg_list.print_sorted()
    [-2, 0, 5]
    >>> print(neg_list)
    [5, -2, 0]

Check with empty list:

    >>> empty = MyList()
    >>> empty.print_sorted()
    []

Check ``print_sorted()`` returns a new list (verify indirectly):

    >>> original = MyList([3, 2, 1])
    >>> original.print_sorted()
    [1, 2, 3]
    >>> print(original)
    [3, 2, 1]
